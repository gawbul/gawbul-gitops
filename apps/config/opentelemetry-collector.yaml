---
apiVersion: opentelemetry.io/v1beta1
kind: OpenTelemetryCollector
metadata:
  name: otel-collector
  namespace: monitoring
spec:
  config:
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:4318
      kubeletstats:
        collection_interval: 10s
        auth_type: serviceAccount
        endpoint: "${env:K8S_NODE_NAME}:10250"
        insecure_skip_verify: true
        metric_groups:
          - node
          - pod
          - container
      k8s_cluster:
        auth_type: serviceAccount
        node_conditions_to_report:
          - Ready
          - MemoryPressure
        allocatable_types_to_report:
          - cpu
          - memory
      k8sobjects:
        auth_type: serviceAccount
        objects:
          - name: pods
            mode: pull
          - name: events
            mode: watch
      hostmetrics:
        root_path: /hostfs
        collection_interval: 10s
        scrapers:
          cpu:
          load:
          memory:
          disk:
          filesystem:
          network:
      filelog:
        include:
          - /var/log/pods/*/*/*.log
        include_file_path: true
        operators:
          - type: container
            id: container-parser
      jaeger:
        protocols:
          grpc:
      prometheus:
        config:
          scrape_configs:
            - job_name: "otel-collector"
              scrape_interval: 5s
              static_configs:
                - targets: ["0.0.0.0:8888"]

    processors:
      batch:
      k8sattributes:
        auth_type: serviceAccount
        extract:
          metadata:
            - k8s.namespace.name
            - k8s.pod.name
            - k8s.pod.start_time
            - k8s.pod.uid
            - k8s.deployment.name
            - k8s.node.name
        pod_association:
          - sources:
              - from: resource_attribute
                name: k8s.pod.ip
          - sources:
              - from: resource_attribute
                name: k8s.pod.uid
          - sources:
              - from: connection
      resourcedetection:
        detectors: ["env", "system"]
        override: false

    exporters:
      otlp/k8s-logs:
        endpoint: "api.eu1.honeycomb.io:443"
        headers:
          "x-honeycomb-team": ${env:HONEYCOMB_API_KEY}
          "x-honeycomb-dataset": "k8s-logs"
      otlp/k8s-metrics:
        endpoint: "api.eu1.honeycomb.io:443"
        headers:
          "x-honeycomb-team": ${env:HONEYCOMB_API_KEY}
          "x-honeycomb-dataset": "k8s-metrics"
      otlp:
        endpoint: "api.eu1.honeycomb.io:443"
        headers:
          "x-honeycomb-team": ${env:HONEYCOMB_API_KEY}
      loki:
        endpoint: http://loki:3100/otlp/v1/logs
      prometheus:
        endpoint: "prometheus-operated:9090"
        namespace: monitoring
        send_timestamps: true
        metric_expiration: 180m
        enable_open_metrics: true
        add_metric_suffixes: false
        resource_to_telemetry_conversion:
          enabled: true
      otlp/jaeger:
        endpoint: http://jaeger-collector:4317

    extensions:
      health_check:
        endpoint: 0.0.0.0:13133
      pprof:
      zpages:

    service:
      extensions: [health_check, pprof, zpages]
      pipelines:
        logs:
          receivers: [otlp, k8sobjects, filelog]
          processors: [batch]
          exporters: [loki]
        metrics:
          receivers: [otlp, kubeletstats, k8s_cluster, hostmetrics, prometheus]
          processors: [batch, k8sattributes]
          exporters: [prometheus]
        traces:
          receivers: [otlp, jaeger]
          processors: [batch]
          exporters: [otlp/jaeger]
  envFrom:
    - secretRef:
        name: otel-collector-environment-secret
  hostNetwork: true
  image: otel/opentelemetry-collector-contrib:latest
  mode: daemonset
  volumeMounts:
    - mountPath: /hostfs
      name: hostfs
      mountPropagation: HostToContainer
      readOnly: true
    - mountPath: /var/log/pods
      name: varlogpods
      readOnly: true
  volumes:
    - name: hostfs
      hostPath:
        path: /
    - name: varlogpods
      hostPath:
        path: /var/log/pods
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: otel-collector
  namespace: monitoring
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: otel-collector
rules:
  - apiGroups:
      - ""
    resources:
      - events
      - namespaces
      - namespaces/status
      - nodes
      - nodes/spec
      - nodes/stats
      - pods
      - pods/status
      - replicationcontrollers
      - replicationcontrollers/status
      - resourcequotas
      - services
    verbs:
      - get
      - watch
      - list
  - apiGroups:
      - apps
    resources:
      - daemonsets
      - deployments
      - replicasets
      - statefulsets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
    resources:
      - daemonsets
      - deployments
      - replicasets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - batch
    resources:
      - jobs
      - cronjobs
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - autoscaling
    resources:
      - horizontalpodautoscalers
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - events.k8s.io
    resources:
      - events
    verbs:
      - watch
      - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: otel-collector
subjects:
  - kind: ServiceAccount
    name: otel-collector
    namespace: monitoring
roleRef:
  kind: ClusterRole
  name: otel-collector
  apiGroup: rbac.authorization.k8s.io
